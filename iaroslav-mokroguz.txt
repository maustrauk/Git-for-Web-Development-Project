Link to my completed codepen:
https://codepen.io/iaroslav-mokroguz/pen/BaKezRL



Questions/answers (Task 2):

1. What is Semantic HTML? 
Semantic HTML is the use of HTML markup to reinforce the semantics, or meaning, of the information in webpages and web applications rather than merely to define its presentation or look.

2. What is HTML used for? 
Hypertext Markup Language is the standard markup language for documents designed to be displayed in a web browser.

3. What is an attribute and where do we put it? 
Attributes define additional characteristics or properties of the element.
Attributes are always specified in the start tag and attribute values should always be enclosed in quotation marks.

4. What is the h1 tag used for? How many times should I use it on a page?
The h1 is an HTML tag that indicates a heading on a website. Best SEO (search engine optimization) practices indicate that there should be only one h1 tag per page.

5. Name two tags that have required attributes:
<img>
<a>

6. What do we put in the head of our HTML document? 
<!DOCTYPE html>

7. What is an id? 
The id attribute specifies a unique id for an HTML element (the value must be unique within the HTML document).

8. What elements can I add an id to? 
The id attribute is part of the Global Attributes, and can be used on any HTML element.

9. How many times can I use the same id on a page? 
1

10. What is a class? 
The HTML class attribute is used to specify a class for an HTML element.

11. What elements can I add a class to? 
The class attribute is part of the Global Attributes, and can be used on any HTML element.

12. How many times can I use the same class on a page? 
Multiple HTML elements can share the same class.

13. How do I get my link to open in a new tab?
Using an attribute target="_blank".

14. What is the alt attribute in the image tag used for? 
The required alt attribute specifies an alternate text for an image, if the image cannot be displayed.

15. How do I reference an id?
#id_name

16. What is the difference between a section and a div?
Section - semantic element that clearly defines its content. Div - non-semantic element that tells nothing about its content.

17. What is CSS used for? 
Cascading Style Sheets is the language we use to style an HTML document.

18. How to we select an element? Example - every h2 on the page.
h2 {}

19. What is the difference between a class and an id? - Give me an example of when I might use each one:
The difference between an id and a class is that an id can be used to identify one element, whereas a class can be used to identify more than one.
CSS example id : #id {} (one element)
CSS example class : .class {} (multiple elements)

20. How do we select classes in CSS?
.class_name {}

21. How do we select a p element with a single class of “human””?
p .human {}

22. What is a parent child selector? When would this be useful? 
It is used to match elements that are direct children of other elements. For example: body > p {color: green;}.
It is is a little more precise than the traditional contextual selector.

23. How do you select all links within a div with the class of sidebar?
.sidebar a:link {}

24. What is a pseudo selector?
A CSS pseudo-class is a keyword added to a selector that specifies a special state of the selected element(s). For example:
a:link 

25. What do we use the change the spacing between lines?
line-height property

26. What do we use to change the spacing between letters?
letter-spacing property

27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
text-transform property

28. How do I add a 1px border around my div that is dotted and black?
div { border: 1px dotted black;}

29. How do I select everything on the page? 
* {}

30. How do I write a comment in CSS?
/* comment */

31. How do I find out what file I am in, when I am using the command line? 
$ ~/Desktop/git/

32. Using the command line - how do I see a list of files/folders in my current folder?
ls

33. How do I remove a file via the command line? Why do I have to be careful with this? 
rm (need to be careful because it doesn't ask permition)

34. Why should I use version control? 
*collaboration many users
*storing versions of code
*restoring previous persions of code
*understanding what happened with code
*backup working code

35. How often should I commit to github?
Whenever I finish a step of my project.

36. What is the command we would use to push our repo up to github? 
git push 

37. Walk me through Lambda's git flow: 
https://github.com/maustrauk/Git-Flow-Practice






Stretch Questions:

1. What is the difference between an inline element and a block element?
By default, inline elements do not force a new line to begin in the document flow.
Block elements, on the other hand, typically cause a line break to occur (although, as usual, this can be changed using CSS).

2. What happens when an element is positioned absolutely? 
An absolutely positioned element is an element whose computed position value is absolute or fixed.

3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
We can define an element as a block, it will behave in the following ways:
*The box will break onto a new line.
*The box will extend in the inline direction to fill the space available in its container.
 In most cases this means that the box will become as wide as its container, filling up 100% of the space available.
*The width and height properties are respected.
*Padding, margin and border will cause other elements to be pushed away from the box.

4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default:
Block by default:
<div>
<h1>
<header>

Inline by default:
<span>
<img>

Inline-block by default:
<select>

5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
It is the term in CSS that describe all HTML elements as boxes with 4 main parts:
*content
*padding
*border
*margin

Boxes have inner and outer display types.
Outer display type details whether the box is block or inline.
Inner display type dictates how elements inside that box are laid out.
By default, the elements inside a box are laid out in normal flow, which means that they behave just like any other block and inline elements.
